server {
    listen 80;

    if ($scheme = "http") {
        return 301 https://$host$request_uri;
    }

    # Serve files from the /data directory to the web root /
    # location / {
    #     root /data;
    #     try_files $uri $uri/ @fallback;
    # }

    # location @fallback {
    #     root /data;
    #     error_page 404 =200 /index.html;
    # }
    # Development
    location / {
        proxy_pass http://127.0.0.1:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    listen 443 ssl;

    # RSA certificate
    ssl_certificate /certs/cert.crt;
    ssl_certificate_key /certs/key.key;

    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # Proxy HTTP requests at /api/* to 127.0.0.1:8080
    location /api/ {
        proxy_pass http://127.0.0.1:8080/;
    }

    # Proxy WebSocket connections at /api/ws to ws://127.0.0.1:8080/ws
    location /api/voice/ws/ {
        proxy_pass http://127.0.0.1:8080/voice/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    location /api/events/ws/ {
        proxy_pass http://127.0.0.1:8080/events/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}